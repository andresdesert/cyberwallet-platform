# ðŸš€ CyberWallet - Docker Compose Optimizado
# 100% Plug & Play - Solo requiere Docker instalado
# VersiÃ³n: 2.0.0 - Optimizada para producciÃ³n

services:
  # ========== BASE DE DATOS POSTGRES ==========
  postgres:
    image: postgres:15-alpine
    container_name: cyberwallet-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: cyberwallet
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      TZ: America/Argentina/Buenos_Aires
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./walletapi/src/main/resources/db/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - cyberwallet-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cyberwallet"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # ========== BACKEND API SPRING BOOT ==========
  backend:
    build:
      context: ./walletapi
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: cyberwallet-backend
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: cyberwallet
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      
      # Server Configuration
      SERVER_PORT: 8080
      
      # JWT Configuration
      JWT_SECRET: cyberwallet-super-secret-jwt-key-2025-production
      JWT_EXPIRATION_MS: 86400000
      
      # Logging Configuration
      LOGGING_LEVEL_ROOT: warn
      LOGGING_LEVEL_COM_CYBERWALLET: info
      
      # Spring Configuration
      SPRING_PROFILES_ACTIVE: docker
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: false
      
      # Performance Configuration
      JAVA_OPTS: "-Xms512m -Xmx1024m -XX:+UseG1GC -XX:+UseContainerSupport"
      
      # Timezone
      TZ: America/Argentina/Buenos_Aires
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cyberwallet-network
    volumes:
      - ./walletapi/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # ========== FRONTEND REACT ==========
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: cyberwallet-frontend
    restart: unless-stopped
    environment:
      # App Configuration
      VITE_API_BASE_URL: http://localhost:8080
      VITE_APP_NAME: CyberWallet
      VITE_APP_VERSION: 2.0.0
      VITE_APP_ENV: production
      
      # Performance Configuration
      NODE_ENV: production
      
      # Timezone
      TZ: America/Argentina/Buenos_Aires
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - cyberwallet-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

# ========== VOLÃšMENES PERSISTENTES ==========
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres

# ========== REDES ==========
networks:
  cyberwallet-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1 