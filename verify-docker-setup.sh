#!/bin/bash

# üéØ Script de Verificaci√≥n - CyberWallet Docker Setup
# Verifica que todos los archivos necesarios est√©n presentes

set -e

echo "üîç Verificando setup Docker de CyberWallet..."

# Funci√≥n para verificar archivo
check_file() {
    if [ -f "$1" ]; then
        echo "‚úÖ $1"
    else
        echo "‚ùå $1 - FALTANTE"
        exit 1
    fi
}

# Funci√≥n para verificar directorio
check_dir() {
    if [ -d "$1" ]; then
        echo "‚úÖ $1/"
    else
        echo "‚ùå $1/ - FALTANTE"
        exit 1
    fi
}

echo ""
echo "üìÅ Verificando estructura de directorios..."
check_dir "walletapi"
check_dir "frontend"

echo ""
echo "üê≥ Verificando archivos Docker principales..."
check_file "docker-compose.yml"
check_file "docker-compose.dev.yml"

echo ""
echo "üìú Verificando scripts de inicio..."
check_file "start.sh"
check_file "start-dev.sh"
check_file "start.bat"

echo ""
echo "üîß Verificando Dockerfiles..."
check_file "walletapi/Dockerfile"
check_file "walletapi/Dockerfile.dev"
check_file "frontend/Dockerfile"
check_file "frontend/Dockerfile.dev"

echo ""
echo "üåê Verificando configuraciones Nginx..."
check_file "frontend/nginx.conf"
check_file "frontend/nginx-default.conf"

echo ""
echo "üö´ Verificando .dockerignore..."
check_file "walletapi/.dockerignore"
check_file "frontend/.dockerignore"

echo ""
echo "üìö Verificando documentaci√≥n..."
check_file "README-Docker.md"

echo ""
echo "üéØ Verificando Docker..."

# Verificar que Docker est√© instalado
if command -v docker &> /dev/null; then
    echo "‚úÖ Docker est√° instalado"
    docker --version
else
    echo "‚ùå Docker no est√° instalado"
    exit 1
fi

# Verificar que Docker Compose est√© disponible
if command -v docker-compose &> /dev/null || docker compose version &> /dev/null; then
    echo "‚úÖ Docker Compose est√° disponible"
    if command -v docker-compose &> /dev/null; then
        docker-compose --version
    else
        docker compose version
    fi
else
    echo "‚ùå Docker Compose no est√° disponible"
    exit 1
fi

echo ""
echo "üéâ ¬°Verificaci√≥n completada exitosamente!"
echo ""
echo "üìã Resumen de archivos creados:"
echo "  - docker-compose.yml (Producci√≥n)"
echo "  - docker-compose.dev.yml (Desarrollo)"
echo "  - start.sh (Linux/Mac - Producci√≥n)"
echo "  - start-dev.sh (Linux/Mac - Desarrollo)"
echo "  - start.bat (Windows - Producci√≥n)"
echo "  - walletapi/Dockerfile (Backend - Producci√≥n)"
echo "  - walletapi/Dockerfile.dev (Backend - Desarrollo)"
echo "  - frontend/Dockerfile (Frontend - Producci√≥n)"
echo "  - frontend/Dockerfile.dev (Frontend - Desarrollo)"
echo "  - frontend/nginx.conf (Configuraci√≥n Nginx)"
echo "  - frontend/nginx-default.conf (Configuraci√≥n del sitio)"
echo "  - walletapi/.dockerignore (Optimizaci√≥n Backend)"
echo "  - frontend/.dockerignore (Optimizaci√≥n Frontend)"
echo "  - README-Docker.md (Documentaci√≥n completa)"
echo ""
echo "üöÄ Para iniciar el proyecto:"
echo "  Linux/Mac: ./start.sh (producci√≥n) o ./start-dev.sh (desarrollo)"
echo "  Windows: start.bat (producci√≥n)"
echo ""
echo "üìñ Para m√°s informaci√≥n, consulta README-Docker.md" 